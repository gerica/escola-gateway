name: escola

services:
  # Serviço do banco de dados
  db:
    image: postgres:16-alpine
    container_name: escola-postgres
    # As variáveis do banco agora também vêm do .env
    env_file:
      - ./.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - escola-network
    # ADICIONADO: Healthcheck para o banco de dados
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  # Serviço do Eureka Server
#  eureka-server:
#    # Aponta para a pasta do projeto Eureka para construir a imagem
#    build:
#      context: ../eureka-server
#      dockerfile: ./Dockerfile
#    container_name: eureka-server
#    ports:
#      - "8761:8761"
#      - "5005:5005" # Porta de debug
#    networks:
#      - escola-network # Garante que ele entre na nossa rede customizada
#    volumes:
#      # Mapeia o diretório atual (raiz do projeto) para /app
#      - ../eureka-server/.:/app
#    # A diretiva 'env_file' diz explicitamente para carregar as variáveis deste arquivo.
#    env_file:
#      - ../eureka-server/.env
##    environment:
##      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
#    healthcheck:
#      # Comando que o Docker vai rodar dentro do container para checar a saúde
#      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
#      interval: 60s  # Checar a cada 60 segundos
#      timeout: 5s    # Esperar no máximo 10 segundos pela resposta
#      retries: 10     # Tentar 20 vezes antes de marcar como "unhealthy"

  # Gatway da aplicacao
  gateway:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: gateway
    depends_on:
      db:
        condition: service_started
#      eureka-server:
#        condition: service_healthy

    ports:
      - "8080:8080"
      - "5006:5006"
    volumes:
      - .:/app
    env_file:
      - ./.env
#    environment:
#      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006
    networks:
      - escola-network

networks:
  escola-network:
    driver: bridge

volumes:
  postgres-data: