app:
  description: Sistema de Gestão Escolar

server:
  port: 8080

# Nome da aplicação, importante para o Service Discovery (Eureka)
spring:
  application:
    name: federated-gateway
  main:
    web-application-type: reactive
  # --- CONFIGURAÇÃO DO GATEWAY ---
  cloud:
    loadbalancer:
      enabled: true
    gateway:
      server:
        webflux:
          routes:
            - id: auth-service-graphql
              uri: lb://AUTH-SERVICE
              predicates:
                - Path=/graphql
              metadata:
                graphql-subgraph: true
            - id: auth-service-internal
              uri: lb://AUTH-SERVICE
              predicates:
                - Path=/internal/auth/**
            - id: graphiql
              uri: no://op
              predicates:
                - Path=/graphiql
  #            - id: client-service
  #              uri: lb://CLIENT-SERVICE
  #              predicates:
  #                - Path=/internal/client/** # Caminho interno, nunca exposto ao cliente
  #              metadata:
  #                graphql-subgraph: true
  #      handler-mapping:
  #        order: 2

  # Bloco de configuração do GraphQL CORRIGIDO
  graphql:
    http:
      path: /graphql
    graphiql:
      enabled: true
      path: /graphiql
    federation:
      enabled: true

# Configuração do cliente Eureka. O Gateway precisa saber onde o servidor Eureka está.
eureka:
  client:
    service-url:
      # URL padrão do servidor Eureka. Você precisará de um serviço Eureka rodando.
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
    # Tenta se registrar a cada 5 segundos até conseguir
    lease-renewal-interval-in-seconds: 5
    # Se não conseguir renovar em 15s, o servidor pode removê-lo
    lease-expiration-duration-in-seconds: 15
    # Busca o registro de outros serviços a cada 10 segundos
    registry-fetch-interval-seconds: 10
  instance:
    hostname: gateway
    prefer-ip-address: true

# No final do seu application.yml
management:
  endpoints:
    web:
      exposure:
        # Expõe o endpoint 'mappings' para que possamos ver todas as rotas
        include: mappings


logging:
  level:
    org.springframework.graphql: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web.reactive: DEBUG
    org.springframework.cloud.loadbalancer: DEBUG
    com.netflix.discovery: DEBUG
    org.springframework.cloud.gateway: TRACE
    reactor.netty: DEBUG